services:
  frontend-dev:
    build:
      context: ./frontend
      dockerfile: dev.Dockerfile
    ports:
      - '5173:5173'
    volumes:
      - ./frontend:/app
      - /app/node_modules
    container_name: frontend-dev

  backend-dev:
    build:
      context: ./backend
      dockerfile: dev.Dockerfile
    ports:
      - '3001:3001'
    volumes:
      - ./backend:/app
      - /app/node_modules
    environment:
      PORT: 3001
      NODE_ENV: development
      DATABASE_URL: postgres://libraryapp:salainen@db/libraryapp
      TEST_DATABASE_URL: postgres://libraryapp:salainen@test-db/libraryapp
      FRONTEND_URL: http://localhost:5173
      JWT_SECRET: salainen
      CRON_SECRET: salainen
    depends_on:
      db:
        condition: service_healthy
    container_name: backend-dev
  
  frontend-e2e:
    build:
      context: ./frontend
      dockerfile: dev.Dockerfile
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      VITE_API_BASE_URL: http://backend-e2e:3001/api
    container_name: frontend-e2e
  
  backend-e2e:
    build:
      context: ./backend
      dockerfile: dev.Dockerfile
    volumes:
      - ./backend:/app
      - /app/node_modules
    environment:
      NODE_ENV: test
      TEST_DATABASE_URL: postgres://libraryapp:salainen@test-db/libraryapp
      FRONTEND_URL: http://frontend-e2e:5173
      JWT_SECRET: salainen
      CRON_SECRET: salainen
    depends_on:
      test-db:
        condition: service_healthy
    container_name: backend-e2e

  e2e:
    build:
      context: ./e2e
      dockerfile: dev.Dockerfile
    volumes:
      - ./e2e:/app
      - /app/node_modules
    environment:
      FRONTEND_URL: http://frontend-e2e:5173
      BACKEND_URL: http://backend-e2e:3001
      CRON_SECRET: salainen
    container_name: e2e

  db:
    image: postgres
    volumes:
      - ./db-data:/var/lib/postgresql/data
    environment:
      PORT: 5432
      POSTGRES_USER: libraryapp
      POSTGRES_PASSWORD: salainen
      POSTGRES_DB: libraryapp
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U libraryapp']
      interval: 5s
      timeout: 5s
      retries: 5
    container_name: db

  test-db:
    image: postgres
    environment:
      POSTGRES_USER: libraryapp
      POSTGRES_PASSWORD: salainen
      POSTGRES_DB: libraryapp
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U libraryapp']
      interval: 5s
      timeout: 5s
      retries: 5
    container_name: test-db

  adminer:
    image: adminer
    ports:
      - 8080:8080
    container_name: adminer
